# Enhanced 0G Chain RPC Proxy - Optimized for Pro Plan
FROM node:18-alpine

# Install additional tools for monitoring and debugging
RUN apk add --no-cache \
    curl \
    jq \
    htop \
    net-tools \
    tcpdump

# Create app directory
WORKDIR /app

# Copy all proxy and trade streaming files
COPY start-rpc-proxy.sh ./
COPY rpc_proxy.py ./
COPY enhanced-proxy-server.js ./
COPY enhanced-trade-tracker.js ./
COPY ecosystem.config.js ./
COPY package*.json ./
COPY complete-trade-dashboard.html ./public/
COPY TRADE_STREAMING_API.md ./docs/

# Create directories
RUN mkdir -p public docs logs

# Move static files
RUN mv complete-trade-dashboard.html public/index.html 2>/dev/null || true
RUN mv TRADE_STREAMING_API.md docs/ 2>/dev/null || true

RUN chmod +x start-rpc-proxy.sh rpc_proxy.py

# Install Node.js dependencies for trade streaming
RUN npm install --production

# Install PM2 for process management and monitoring
RUN npm install -g pm2

# Expose proxy port, monitoring port, and trade streaming ports
EXPOSE 26657 9615 6000 6001

# Set environment variables optimized for Pro plan
ENV OFFICIAL_RPC="https://evmrpc.0g.ai/"
ENV TESTNET_RPC="https://evmrpc-testnet.0g.ai/"
ENV PROXY_PORT="26657"
ENV MONITORING_PORT="9615"
ENV TRADE_API_PORT="6000"
ENV TRADE_WS_PORT="6001"
ENV NODE_ENV="production"
ENV PM2_INSTANCES="4"
ENV RPC_URL="http://localhost:26657/"

# Enhanced health check with both services
HEALTHCHECK --interval=15s --timeout=5s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:26657/health && \
        curl -f http://localhost:6000/health && \
        curl -f -X POST http://localhost:26657 \
        -H "Content-Type: application/json" \
        -d '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' | \
        jq -e '.result' > /dev/null || exit 1

# Start both services with PM2 ecosystem
CMD ["pm2-runtime", "start", "ecosystem.config.js"]
